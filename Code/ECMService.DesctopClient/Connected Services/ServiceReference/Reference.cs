//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ECMService.DesctopClient.ServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IConnectors")]
    public interface IConnectors {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConnectors/DoWork", ReplyAction="http://tempuri.org/IConnectors/DoWorkResponse")]
        int DoWork(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConnectors/DoWork", ReplyAction="http://tempuri.org/IConnectors/DoWorkResponse")]
        System.Threading.Tasks.Task<int> DoWorkAsync(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConnectors/GetDataByEndPointId", ReplyAction="http://tempuri.org/IConnectors/GetDataByEndPointIdResponse")]
        ECMService.Manager.ServiceReference.EcmData GetDataByEndPointId(int endPointId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConnectors/GetDataByEndPointId", ReplyAction="http://tempuri.org/IConnectors/GetDataByEndPointIdResponse")]
        System.Threading.Tasks.Task<ECMService.Manager.ServiceReference.EcmData> GetDataByEndPointIdAsync(int endPointId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConnectors/GetDataByServiceId", ReplyAction="http://tempuri.org/IConnectors/GetDataByServiceIdResponse")]
        ECMService.Manager.ServiceReference.EcmData[] GetDataByServiceId(int serviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConnectors/GetDataByServiceId", ReplyAction="http://tempuri.org/IConnectors/GetDataByServiceIdResponse")]
        System.Threading.Tasks.Task<ECMService.Manager.ServiceReference.EcmData[]> GetDataByServiceIdAsync(int serviceId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IConnectorsChannel : ECMService.DesctopClient.ServiceReference.IConnectors, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConnectorsClient : System.ServiceModel.ClientBase<ECMService.DesctopClient.ServiceReference.IConnectors>, ECMService.DesctopClient.ServiceReference.IConnectors {
        
        public ConnectorsClient() {
        }
        
        public ConnectorsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ConnectorsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConnectorsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConnectorsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int DoWork(int x, int y) {
            return base.Channel.DoWork(x, y);
        }
        
        public System.Threading.Tasks.Task<int> DoWorkAsync(int x, int y) {
            return base.Channel.DoWorkAsync(x, y);
        }
        
        public ECMService.Manager.ServiceReference.EcmData GetDataByEndPointId(int endPointId) {
            return base.Channel.GetDataByEndPointId(endPointId);
        }
        
        public System.Threading.Tasks.Task<ECMService.Manager.ServiceReference.EcmData> GetDataByEndPointIdAsync(int endPointId) {
            return base.Channel.GetDataByEndPointIdAsync(endPointId);
        }
        
        public ECMService.Manager.ServiceReference.EcmData[] GetDataByServiceId(int serviceId) {
            return base.Channel.GetDataByServiceId(serviceId);
        }
        
        public System.Threading.Tasks.Task<ECMService.Manager.ServiceReference.EcmData[]> GetDataByServiceIdAsync(int serviceId) {
            return base.Channel.GetDataByServiceIdAsync(serviceId);
        }
    }
}
